{"version":3,"file":"static/js/145.4bf72df7.chunk.js","mappings":"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","sources":["components/ThreeContext.tsx","utils/functions.ts","components/controller/TransitionPointsController.tsx","uses/useInterval.ts","components/effects/Stars.tsx","uses/useAddObject.ts","uses/useRequestAnimationFrame.ts","utils/bezier.ts","utils/color.ts","utils/generateCanvas.ts","utils/math.ts","../node_modules/@takumus/cubic-bezier/dist/index.esm.js"],"sourcesContent":["import React, { createContext, FC, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\n\r\ninterface ThreeContextProps {\r\n    renderer: THREE.WebGLRenderer | null,\r\n    scene: THREE.Scene | null,\r\n}\r\n\r\nconst initialContext: ThreeContextProps = {\r\n    renderer: null,\r\n    scene: null,\r\n};\r\n\r\nconst ThreeContext = createContext<ThreeContextProps>(initialContext);\r\n\r\nexport const useThreeContext = () => useContext(ThreeContext);\r\nexport const ThreeProvider: FC = ({ children }) => {\r\n    const size = useSize();\r\n    const elCanvas = useRef<HTMLCanvasElement>(null)\r\n    const [threeRenderer, setThreeRenderer] = useState<THREE.WebGLRenderer | null>(null);\r\n\r\n    const scene = useMemo(() => {\r\n        return new THREE.Scene();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (threeRenderer == null) return;\r\n        if (size == null) return;\r\n        threeRenderer.setPixelRatio(window.devicePixelRatio);\r\n        threeRenderer.setSize(size.width, size.height);\r\n    }, [threeRenderer, size])\r\n\r\n    useEffect(() => {\r\n        if (elCanvas.current == null) throw new Error('');\r\n        const renderer = new THREE.WebGLRenderer({\r\n            canvas: elCanvas.current,\r\n            antialias: true,\r\n        });\r\n        setThreeRenderer(renderer);\r\n        return () => {\r\n            setThreeRenderer(null);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <ThreeContext.Provider\r\n            value={{\r\n                renderer: threeRenderer,\r\n                scene,\r\n            }}\r\n        >\r\n            <canvas ref={elCanvas} />\r\n            {children}\r\n        </ThreeContext.Provider>\r\n    );\r\n};\r\n\r\nfunction useSize() {\r\n    const [size, setSize] = useState<{width: number, height: number}>();\r\n\r\n    const resize = useCallback(() => {\r\n        setSize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        resize();\r\n        window.addEventListener('resize', resize);\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        };\r\n    }, [resize]);\r\n\r\n    return size;\r\n}","// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport const call = <T extends (...args: any[]) => any>(cb: T, ...data: Parameters<T>) => (): ReturnType<T> => cb(...data);\r\n","import React, { FC, useState } from 'react';\r\nimport { useInterval } from '../../uses/useInterval';\r\nimport { call } from '../../utils/functions';\r\nimport { Starts } from '../effects/Stars';\r\nconst PI2 = Math.PI * 2;\r\nconst LENGTH = 1200;\r\n\r\nconst TIMELINE = [\r\n    call(createHourglassVerticies, LENGTH),\r\n    call(createCircleVerticies, LENGTH),\r\n    call(createExample1, LENGTH),\r\n    // call(createRandomVerticies, LENGTH),\r\n];\r\n\r\nexport const TransitionPointsController: FC = () => {\r\n    const [verticies, setVerticies] = useState(createHourglassVerticies(LENGTH));\r\n\r\n    useInterval(() => {\r\n        setVerticies(createRandomVerticies(LENGTH));\r\n        setTimeout(() =>{ \r\n            setVerticies(TIMELINE[Math.floor(TIMELINE.length * Math.random())]());\r\n        }, 2000);\r\n    }, 10000);\r\n    return (\r\n        <Starts target={verticies} ease={0.06} />\r\n    )\r\n};\r\n\r\nfunction createRandomVerticies(len: number): number[]{\r\n    const vertices = [];\r\n    const SIZE = 1000;\r\n    for (let i = 0; i < len; i++) {\r\n        const y = SIZE * (Math.random() - 0.5);\r\n        const x = SIZE * (Math.random() - 0.5);\r\n        const z = SIZE * (Math.random() - 0.5);\r\n        vertices.push(x, y, z);\r\n    }\r\n    return vertices;\r\n}\r\n\r\nfunction createHourglassVerticies(len: number): number[] {\r\n    const vertices = [];\r\n    const SIZE = 100;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const t = (i / len * PI2) * 20;\r\n\r\n        const y = SIZE * Math.sin((i / len - 0.5) * 2);\r\n        const x = SIZE * Math.sin(t) * (i / len - 0.5) * 2;\r\n        const z = SIZE * Math.cos(t) * (i / len - 0.5) * 2;\r\n\r\n        vertices.push(x, y, z);\r\n    }\r\n    return vertices;\r\n}\r\n\r\nfunction createCircleVerticies(len: number): number[] {\r\n    const vertices = [];\r\n    const SIZE = 100;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const t = (i / len * PI2) * 20;\r\n\r\n        const y = SIZE * Math.cos((i / len - 0.5) * 2 * Math.PI);\r\n        const x = SIZE * Math.sin(t) * (Math.abs((i / len - 0.5) * 2 * Math.PI) - 1);\r\n        const z = SIZE * Math.cos(t) * (Math.abs((i / len - 0.5) * 2 * Math.PI) - 1);\r\n\r\n        vertices.push(x, y, z);\r\n    }\r\n    return vertices;\r\n}\r\n\r\nfunction createExample1(len: number): number[]{\r\n    const vertices = [];\r\n    const SIZE = 100;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n        const t = (i / len * PI2) * 20;\r\n\r\n        const y = SIZE * Math.sin((i / len - 0.5) * 2 * Math.PI);\r\n        const x = SIZE * Math.sin(t) * (i / len - 0.5) * 2;\r\n        const z = SIZE * Math.cos(t) * (i / len - 0.5) * 2;\r\n\r\n        vertices.push(x, y, z);\r\n    }\r\n    return vertices;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (cb: () => void, time: number) => {\r\n    const refCb = useRef(cb);\r\n    useEffect(() => {\r\n        refCb.current = cb;\r\n    }, [cb]);\r\n    useEffect(() => {\r\n        const id = window.setInterval(() => {\r\n            refCb.current();\r\n        }, time);\r\n        return () => {\r\n            window.clearInterval(id);\r\n        }\r\n    }, [time]);\r\n};","import { FC, useEffect, useMemo, useRef } from 'react';\r\nimport { useThreeContext } from '../ThreeContext';\r\nimport * as THREE from 'three';\r\nimport { loopAnimation } from '../../uses/useRequestAnimationFrame';\r\nimport { getGenerateCircle } from '../../utils/generateCanvas';\r\nimport { useAddObject } from '../../uses/useAddObject';\r\n\r\nexport const Starts: FC<{\r\n    target: number[];\r\n    ease?: number;\r\n    size?: number;\r\n    map?: THREE.Texture,\r\n    color?: number;\r\n    backgroundColor?: number;\r\n    onAnimate?: (vol: number) => void;\r\n    blending?: THREE.Blending\r\n}> = ({ \r\n    target,\r\n    ease = 0.004,\r\n    size = 16,\r\n    map = getGenerateCircle(),\r\n    color,\r\n    backgroundColor,\r\n    onAnimate,\r\n    blending = THREE.AdditiveBlending\r\n}) => {\r\n    \r\n    const { scene, renderer } = useThreeContext();\r\n\r\n    const refPrevValue = useRef(target);\r\n    const refPostValue = useRef(target);\r\n\r\n    useEffect(() => {\r\n        refPostValue.current = target;\r\n    }, [target]);\r\n\r\n\r\n    const geometry = useMemo(() => {\r\n        return new THREE.BufferGeometry();\r\n    }, []);\r\n\r\n    const material = useMemo(() => {\r\n        return new THREE.PointsMaterial({\r\n            size,\r\n            map,\r\n            color,\r\n            transparent: true,\r\n            depthWrite: false,\r\n            blending: blending,\r\n        });\r\n    }, [size, map, color, blending]);\r\n    const camera = useMemo(() => {\r\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight);\r\n        return camera;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const resize = () => {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n        };\r\n        window.addEventListener('resize', resize);\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n        }\r\n    }, [camera]);\r\n\r\n    const mesh = useMemo(() => {\r\n        const mesh = new THREE.Points(geometry, material);\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(refPrevValue.current, 3));\r\n        return mesh;\r\n    }, [geometry, material]);\r\n\r\n\r\n    useAddObject(scene, mesh);\r\n    useAddObject(scene, camera);\r\n\r\n    useEffect(() => {\r\n        if (backgroundColor == null) return;\r\n        if (scene == null) return;\r\n        scene.background = new THREE.Color(backgroundColor);\r\n        return () => {\r\n            scene.background = null;\r\n        }\r\n    }, [scene, backgroundColor]);\r\n\r\n    // animation loop\r\n    useEffect(() => {\r\n        const lookatPosition = new THREE.Vector3(0, 0, 0);\r\n        camera.lookAt(lookatPosition);\r\n        if (renderer == null || scene == null) return;\r\n\r\n        camera.position.z = 300;\r\n        const cancel = loopAnimation((time) => {\r\n            camera.position.x = Math.sin(time / 6000.0) * 300;\r\n            camera.position.z = Math.cos(time / 6000.0) * 300;\r\n\r\n            onAnimate && onAnimate(time);\r\n            // TODO easing式の展開\r\n            if (ease <= 1) {\r\n                for (let i = 0; i < refPrevValue.current.length; i++ ) {\r\n                    refPrevValue.current[i] += (-refPrevValue.current[i] + refPostValue.current[i]) * ease;\r\n                }\r\n            }\r\n\r\n            geometry.setAttribute('position', new THREE.Float32BufferAttribute(refPrevValue.current, 3));\r\n            camera.lookAt(lookatPosition);\r\n\r\n            renderer.render(scene, camera);\r\n        });\r\n\r\n        return () => {\r\n            cancel();\r\n        };\r\n    }, [scene, renderer, ease, mesh, camera, geometry, onAnimate]);\r\n    return null;\r\n}\r\n","import { useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nexport const useAddObject = (parent: THREE.Object3D | null, children: THREE.Object3D | null) => {\r\n    useEffect(() => {\r\n        if (parent == null || children == null) return;\r\n        parent.add(children);\r\n        return () => {\r\n            parent.remove(children);\r\n        }\r\n    }, [parent, children]);\r\n};","import { useEffect, useRef } from \"react\";\r\n\r\ntype AnimationFrame = (time: number, deltaTime: number) => void;\r\n\r\nexport function loopAnimation(cb: AnimationFrame) {\r\n    let isCancel = false;\r\n    let id = 0;\r\n    const main: AnimationFrame = (time) => {\r\n        if (isCancel) return;\r\n        id = window.requestAnimationFrame((time) => {\r\n            main(time, 0);\r\n        });\r\n        cb(time, 0);\r\n    }\r\n\r\n    id = window.requestAnimationFrame((time) => {\r\n        main(time, 0)\r\n    });\r\n    return () => {\r\n        isCancel = true;\r\n        window.cancelAnimationFrame(id)\r\n    };\r\n}\r\n\r\nexport function useRequestAnimationFrame(cb: AnimationFrame) {\r\n    const refCallback = useRef<AnimationFrame>(cb);\r\n    const refDeltaTime = useRef(0);\r\n\r\n    useEffect(() => {\r\n        refCallback.current = cb;\r\n    }, [cb]);\r\n    useEffect(() => {\r\n        let animationFrameId = 0;\r\n        const main = (time: number) => {\r\n            animationFrameId = window.requestAnimationFrame(main);\r\n            refCallback.current(time, time - refDeltaTime.current);\r\n            refDeltaTime.current = time;\r\n        }\r\n        animationFrameId = requestAnimationFrame((time) => {\r\n            refDeltaTime.current = time;\r\n            main(time);\r\n        });\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, []);\r\n}\r\n","import bezier from '@takumus/cubic-bezier';\r\n\r\nexport const EaseOutQuad = bezier(0.25, 0.46, 0.45, 0.94);\r\nexport const EaseOutExpo = bezier(0.19, 1, 0.22, 1);\r\nexport const EaseInQuad = bezier(0.55, 0.085, 0.68, 0.53);\r\n","/**\r\n * ref https://note.kiriukun.com/entry/20181206-rgb-and-hsl-conversion\r\n * HSLからRGBを算出して返却\r\n * @param  {Number} h - 色相 (0~360)\r\n * @param  {Number} s - 彩度 (0~100)\r\n * @param  {Number} l - 明度 (0~100)\r\n * @return {Object} r: 赤 (0~255), g: 緑 (0~255), b: 青 (0~255)\r\n */\r\nexport const hsl2rgb = function (h: number, s: number, l: number) {\r\n    const RGB_MAX = 255;\r\n    const HUE_MAX = 360;\r\n    const SATURATION_MAX = 100;\r\n    const LIGHTNESS_MAX = 100;\r\n    let r, g, b, max, min;\r\n\r\n    h = h % HUE_MAX;\r\n    s = s / SATURATION_MAX;\r\n    l = l / LIGHTNESS_MAX;\r\n\r\n    if (l < 0.5) {\r\n        max = l + l * s;\r\n        min = l - l * s;\r\n    } else {\r\n        max = l + (1 - l) * s;\r\n        min = l - (1 - l) * s;\r\n    }\r\n\r\n    const hp = HUE_MAX / 6;\r\n    const q = h / hp;\r\n    if (q <= 1) {\r\n        r = max;\r\n        g = (h / hp) * (max - min) + min;\r\n        b = min;\r\n    } else if (q <= 2) {\r\n        r = ((hp * 2 - h) / hp) * (max - min) + min;\r\n        g = max;\r\n        b = min;\r\n    } else if (q <= 3) {\r\n        r = min;\r\n        g = max;\r\n        b = ((h - hp * 2) / hp) * (max - min) + min;\r\n    } else if (q <= 4) {\r\n        r = min;\r\n        g = ((hp * 4 - h) / hp) * (max - min) + min;\r\n        b = max;\r\n    } else if (q <= 5) {\r\n        r = ((h - hp * 4) / hp) * (max - min) + min;\r\n        g = min;\r\n        b = max;\r\n    } else {\r\n        r = max;\r\n        g = min;\r\n        b = ((HUE_MAX - h) / hp) * (max - min) + min;\r\n    }\r\n\r\n    return {\r\n        r: r * RGB_MAX,\r\n        g: g * RGB_MAX,\r\n        b: b * RGB_MAX\r\n    };\r\n};\r\n","import * as THREE from 'three';\r\nimport bezier from '@takumus/cubic-bezier';\r\nimport { between, mix, normalize } from './math';\r\nimport { hsl2rgb } from './color';\r\nimport { EaseInQuad } from './bezier';\r\n\r\nexport function getGenerateCircle() {\r\n    //canvasで小さい丸の作成\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 20;\r\n    canvas.height = 20;\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (context == null) throw new Error('');\r\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\r\n    gradient.addColorStop(0, 'rgba(255,255,255,1)');\r\n    gradient.addColorStop(0.01, 'rgba(0,255,255,1)');\r\n    gradient.addColorStop(0.3, 'rgba(0,0,64,1)');\r\n    gradient.addColorStop(1, 'rgba(0,0,0,1)');\r\n\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const texture = new THREE.Texture(canvas);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n}\r\n\r\nconst easeInOutQuad = bezier(0.455, 0.03, 0.515, 0.955);\r\nconst easeOutQuart =  bezier(0.25, 0.46, 0.45, 0.94);\r\n\r\nconst createRgb = (r: string | number, g: string | number, b: string | number, a: string | number = '1') => `rgba(${r}, ${g}, ${b}, ${a})`\r\n\r\nexport function getGenerateCircle2() {\r\n    //canvasで小さい丸の作成\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 20;\r\n    canvas.height = 20;\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (context == null) throw new Error('');\r\n\r\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\r\n\r\n    const createColor = (x: number) => {\r\n        const { r, g, b } = hsl2rgb(mix(0, 360, x), 100, mix(100, 0, x));\r\n        return [r, g, b];\r\n    }\r\n    \r\n\r\n    for (let step = 0; step < 1.0; step += 0.01) {\r\n        const x = easeInOutQuad(step);\r\n        const c = easeOutQuart(step);\r\n\r\n        const [r, g, b] = createColor(c);\r\n        gradient.addColorStop(x, createRgb(r, g, b));\r\n    }\r\n\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const texture = new THREE.Texture(canvas);\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n}\r\n\r\nexport function getSquareFlyTexture({\r\n    isDebug = true,\r\n} = {}) {\r\n    //canvasで小さい丸の作成\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 64;\r\n    canvas.height = 64;\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (context == null) throw new Error('');\r\n\r\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\r\n\r\n    const createColor = (x: number, hsl = 50) => {\r\n        const { r, g, b } = hsl2rgb(hsl, 50, mix(0, 30, x));\r\n        return [r, g, b];\r\n    }\r\n    \r\n    for (let step = 0; step < 1.0; step += 0.01) {\r\n        if (between(0, 0.8, step)) {\r\n            const t = EaseInQuad(normalize(step, 0, 0.8));\r\n            \r\n            const [r, g, b] = createColor(mix(0, 0.8, t));\r\n            gradient.addColorStop(step, createRgb(r, g, b));\r\n        }\r\n\r\n        if (between(0.8, 0.99, step)) {\r\n            const t = EaseInQuad(normalize(step, 0.8, 0.99));\r\n            const [r, g, b] = createColor(mix(0.8, 0, t));\r\n            gradient.addColorStop(step, createRgb(r, g, b));\r\n        }\r\n    }\r\n\r\n    context.fillStyle = gradient;\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    if (isDebug) debugCanvas(canvas);\r\n    const texture = new THREE.Texture(canvas);\r\n\r\n    texture.premultiplyAlpha = true;\r\n    texture.needsUpdate = true;\r\n\r\n    return texture;\r\n}\r\n\r\n\r\nfunction debugCanvas (canvas: HTMLCanvasElement) {\r\n    const elDebugWrap = document.createElement('div');\r\n    elDebugWrap.style.position = 'fixed';\r\n    elDebugWrap.style.top = '0px';\r\n    elDebugWrap.style.right = '0px';\r\n    canvas.style.width = '100%'\r\n    canvas.style.height = '100%'\r\n    elDebugWrap.style.width = '20vh';\r\n    elDebugWrap.style.height = '20vh';\r\n    elDebugWrap.appendChild(canvas);\r\n    document.body.appendChild(elDebugWrap);\r\n}","import Simplex from 'simplex-noise';\r\n\r\ninterface NoiseOptions {\r\n    noiseDiff?: number;\r\n}\r\n\r\nexport const parseSimplecNoise = (instance: Simplex) => (args: number[]): number => {\r\n    if (args.length === 1) throw new Error('fuck you');\r\n    if (args.length === 2) return instance.noise2D(args[0], args[1]);\r\n    if (args.length === 3) return instance.noise3D(args[0], args[1], args[2]);\r\n    return instance.noise4D(args[0], args[1], args[2], args[3]);\r\n}\r\n\r\nexport const createCurlNoise = (noise: (vlaues: number[]) => number) => {\r\n    return (values: number[], options?: NoiseOptions) => {\r\n        const {\r\n            noiseDiff = 0.01,\r\n        } = options || {};\r\n\r\n        return values.map((_, index) => {\r\n            // 誤差A\r\n            const a = values.map((value, target) => {\r\n                if (target === index) {\r\n                    return [\r\n                        value - noiseDiff,\r\n                        value + noiseDiff,\r\n                    ];\r\n                }\r\n                return [\r\n                    value,\r\n                    value,\r\n                ];\r\n            });\r\n\r\n            const result = a.reduce((prev, current, index) => {\r\n                if (index === 0) return noise(current);\r\n                return prev - noise([...current].reverse())\r\n            }, 0);\r\n            return calcEps(result, noiseDiff);\r\n        }).map((val, index) => {\r\n            if (index % 2 === 0) return -val;\r\n            return val;\r\n        });\r\n    };\r\n}\r\n\r\nfunction calcEps(a: number, inv: number) {\r\n    return a * (1.0 / (2 * inv));\r\n}\r\n\r\n/**\r\n * @param t1 - 開始地点\r\n * @param t2 - 終了地点\r\n * @param a - 経過 (0-1)\r\n * @returns t1とt2のa線形補完\r\n */\r\nexport const mix = (t1: number, t2: number, a: number) => t1 * (1 - a) + t2 * a;\r\n\r\nexport const randomXorShift = (seed = 88675123) => {\r\n    let w = seed;\r\n    let x = 123456789;\r\n    let y = 362436069;\r\n    let z = 521288629;\r\n    return (min = 0, max = 1) => {\r\n        const t = x ^ (x << 11);\r\n        x = y;\r\n        y = z;\r\n        z = w;\r\n        w = (w ^ (w >>> 19)) ^ (t ^ (t >>> 8));\r\n\r\n        const r = Math.abs(w)\r\n        return min + (r % (max + 1 - min));\r\n    };\r\n};\r\n\r\n/**\r\n * 0-1に変換する\r\n * @param t 対象数値\r\n * @param min 最小数値\r\n * @param max 最大数値\r\n * @returns 0-1\r\n * @example\r\n * ```\r\n * normalize(2, 1, 3) // => 0.5\r\n * ```\r\n */\r\nexport const normalize = (t: number, min: number, max: number): number => (t - min) / (max - min);\r\n\r\n\r\n/**\r\n * @param x 導出元数値\r\n * @param min 最小値\r\n * @param max 最大値\r\n * @returns 最小値と最大値の間を返却する\r\n * @example (1.1, 0, 1) => 1\r\n * @example (-0.1, 0, 1) => 0\r\n * @example (1.1, 1, 0) => 1\r\n * @example (-0.1, 1, 0) => 0\r\n */\r\nexport const minMax = (x: number, range1: number, range2: number): number =>\r\n  Math.min(Math.max(range2, range1), Math.max(Math.min(range2, range1), x));\r\n\r\n/**\r\n * between\r\n * @param min 最小値\r\n * @param max 最大値\r\n * @param a ターゲットの値\r\n * @param offset 外部許可\r\n * @returns\r\n */\r\nexport const between = (min: number, max: number, a: number, offset = 0): boolean => a >= min - offset && a <= max + offset;\r\n\r\n// callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any\r\n\r\ntype MapFunction<T, U> = (value: T, index: number, array: T[]) => U;\r\n\r\n/**\r\n * map関数をIndexによる分割をし、順次実行する。（例 x y z ごとのポジションを変更する）\r\n */\r\nexport const editSplitArrayMap = <T, U>(...functions: MapFunction<T, U>[]) => (value: T, index: number, array: T[]) => {\r\n    return functions[index % functions.length](value, Math.floor(index / functions.length), array);\r\n};\r\n\r\n","//2分探索もどきで探索\nfunction search(arr, len, n) {\n  if (n == 0) return 0;\n  var l = 0;\n  var r = len - 1;\n\n  while (l <= r) {\n    var m = ~~((l + r) * 0.5);\n\n    if (arr[m] < n) {\n      l = m + 1;\n    } else {\n      r = m - 1;\n    }\n  }\n\n  return r;\n}\n\nfunction CubicBezier(cp1x, cp1y, cp2x, cp2y) {\n  var p1y = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var p2y = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var res = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 50;\n  var xList = [];\n  var tList = [];\n  cp1y = cp1y;\n  cp2y = cp2y;\n\n  for (var i = 0; i <= res; i++) {\n    var t = i / res;\n    xList.push(bezier(t, 0, cp1x, cp2x, 1));\n    tList.push(t);\n  }\n\n  return function (x) {\n    x = x < 0 ? 0 : x > 1 ? 1 : x;\n    var i = search(xList, res, x);\n    var ax = xList[i];\n    var bx = xList[i + 1];\n    var at = tList[i];\n    var bt = tList[i + 1];\n    return bezier( //tを計算\n    (x - ax) / (bx - ax) * (bt - at) + at, //yを求める\n    p1y, cp1y, cp2y, p2y);\n  };\n} // maximaで求めたらこうなったベジェ関数。\n\nfunction bezier(t, p0, p1, p2, p3) {\n  var mt = 1 - t;\n  return p3 * t * t * t + 3 * mt * p2 * t * t + 3 * mt * mt * p1 * t + mt * mt * mt * p0;\n}\n\nexport default CubicBezier;\n"],"names":["initialContext","renderer","scene","ThreeContext","createContext","useThreeContext","useContext","ThreeProvider","children","size","useState","setSize","resize","useCallback","width","window","innerWidth","height","innerHeight","useEffect","addEventListener","removeEventListener","useSize","elCanvas","useRef","threeRenderer","setThreeRenderer","useMemo","THREE","setPixelRatio","devicePixelRatio","current","Error","canvas","antialias","Provider","value","ref","call","cb","data","PI2","Math","PI","LENGTH","TIMELINE","createHourglassVerticies","len","vertices","i","t","y","cos","x","sin","abs","z","push","TransitionPointsController","verticies","setVerticies","time","refCb","id","setInterval","clearInterval","useInterval","SIZE","random","createRandomVerticies","setTimeout","floor","length","target","ease","Starts","map","getGenerateCircle","color","backgroundColor","onAnimate","blending","refPrevValue","refPostValue","geometry","material","transparent","depthWrite","camera","aspect","updateProjectionMatrix","mesh","setAttribute","useAddObject","background","lookatPosition","lookAt","position","cancel","loopAnimation","render","parent","add","remove","isCancel","main","requestAnimationFrame","cancelAnimationFrame","useRequestAnimationFrame","refCallback","refDeltaTime","animationFrameId","EaseOutQuad","bezier","hsl2rgb","h","s","l","r","g","b","max","min","hp","HUE_MAX","q","document","createElement","context","getContext","gradient","createRadialGradient","addColorStop","fillStyle","fillRect","texture","needsUpdate","easeInOutQuad","easeOutQuart","createRgb","a","getGenerateCircle2","createColor","mix","step","parseSimplecNoise","instance","args","noise2D","noise3D","noise4D","createCurlNoise","noise","values","options","noiseDiff","_","index","inv","calcEps","reduce","prev","reverse","val","t1","t2","randomXorShift","seed","w","minMax","range1","range2","editSplitArrayMap","functions","array","search","arr","n","m","p0","p1","p2","p3","mt","cp1x","cp1y","cp2x","cp2y","p1y","arguments","undefined","p2y","res","xList","tList","ax","bx","at"],"sourceRoot":""}