{"version":3,"file":"static/js/867.18d659e5.chunk.js","mappings":"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","sources":["components/p5/P5Conponent.tsx","components/controller/matrixTyping.ts","components/controller/MatrixMovie.tsx","utils/array.ts","utils/bezier.ts","utils/color.ts","utils/math.ts"],"sourcesContent":["import React, { FC, useEffect, useRef } from \"react\";\r\nimport p5 from 'p5';\r\n\r\ninterface P5ComponentProps {\r\n    sketch: (p: p5) => void;\r\n}\r\n\r\nexport const P5Component: FC<P5ComponentProps> = ({ sketch }) => {\r\n    const refWrapper = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (refWrapper.current == null) throw new Error('');\r\n        const instance = new p5(sketch, refWrapper.current);\r\n        return () => {\r\n            instance.remove();\r\n        }\r\n    }, [sketch]);\r\n    return (<div ref={refWrapper}></div>)\r\n};\r\n","export const matrixType = ['ア', 'イ', 'ウ', 'エ', 'オ', 'カ', 'キ', 'ク', 'ケ', 'コ', 'サ', 'シ', 'ス', 'セ', 'ソ', 'タ', 'チ', 'ツ', 'テ', 'ト', 'ナ', 'ニ', 'ヌ', 'ネ', 'ノ', 'ハ', 'ヒ', 'フ', 'ヘ', 'ホ', 'マ', 'ミ', 'ム', 'メ', 'モ', 'ヤ', 'ユ', 'ヨ', 'ラ', 'リ', 'ル', 'レ', 'ロ', 'ワ', 'ヲ', 'ン', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n","import p5 from 'p5';\r\nimport { FC } from 'react';\r\nimport { mix } from '../../utils/math';\r\nimport { P5Component } from '../p5/P5Conponent';\r\nimport { range } from '../../utils/array';\r\nimport { matrixType } from './matrixTyping';\r\nimport { EaseOutQuad } from '../../utils/bezier';\r\nimport { hsl2rgb } from '../../utils/color';\r\n\r\nclass MatrixText {\r\n    private ctx: p5;\r\n    private textLength = 10;\r\n    private texts = range(10).map(() => '');\r\n    private size: number = 35;\r\n    private y: number;\r\n    private x: number;\r\n\r\n    public onEdnded?: () => void;\r\n\r\n    private intervalTokens: number[] = [];\r\n\r\n    constructor(p5: p5, x: number, y: number) {\r\n        this.ctx = p5;\r\n        this.y = y;\r\n        this.x = x;\r\n        this.draw = this.draw.bind(this);\r\n        this.getText = this.getText.bind(this);\r\n        this.initialize = this.initialize.bind(this);\r\n        this.renderText = this.renderText.bind(this);\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        this.y -= this.ctx.windowHeight;\r\n\r\n        const yMove = window.setInterval(() => {\r\n            this.y += this.size;\r\n            this.y %= this.ctx.windowHeight + this.textLength * this.size;\r\n        }, 55);\r\n\r\n        const typohraphy =  window.setInterval(() => {\r\n            this.texts = this.texts.map(() => this.getText());\r\n        }, 100);\r\n        this.intervalTokens = [yMove, typohraphy];\r\n    }\r\n\r\n    destroy() {\r\n        this.intervalTokens.map(window.clearInterval);\r\n    }\r\n\r\n    getText() {\r\n        const type = matrixType[Math.floor(Math.random() * matrixType.length)];\r\n        return type;\r\n    }\r\n\r\n    renderText(progress: number, textIndex: number) {\r\n        // const t = EaseOutExpo(progress)\r\n        const {r, g, b} = hsl2rgb(100, 100, mix(80, 10, EaseOutQuad(progress)));\r\n        \r\n        this.ctx.fill(r, g, b, mix(255, 100, EaseOutQuad(progress)));\r\n        this.ctx.text(this.texts[textIndex], this.x, this.y - (textIndex * this.size));\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.blendMode(this.ctx.LIGHTEST);\r\n        \r\n\r\n        this.ctx.textSize(this.size);\r\n        this.ctx.textStyle(this.ctx.BOLD);\r\n        for (let i = 0; i < this.textLength; i += 1) {\r\n            const progress = i / this.textLength;\r\n            \r\n            this.renderText(\r\n                progress, \r\n                i\r\n            );\r\n        }\r\n        this.ctx.blendMode(this.ctx.MULTIPLY);\r\n    }\r\n}\r\n\r\nconst circle = (p: p5) => {\r\n    const NUMS = 40;\r\n\r\n    const textItem: MatrixText[] = range(NUMS)\r\n        .map(() => {\r\n            return new MatrixText(p, Math.random() * p.windowWidth, Math.random() * p.windowHeight);\r\n        });\r\n    \r\n\r\n    function draw() {\r\n        textItem.forEach((instance) => instance.draw());\r\n        // p.filter(p.BLUR, 5);\r\n    }\r\n\r\n    function beforeTick() {\r\n        p.background(0, 50);\r\n    }\r\n\r\n    function afterTick() {\r\n    }\r\n    function initialize() {\r\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n        p.background(0, 255);\r\n    };\r\n\r\n    p.setup = initialize;\r\n    p.windowResized = initialize;\r\n    p.draw = () => {\r\n        beforeTick();\r\n        draw();\r\n        afterTick();\r\n    };\r\n};\r\n\r\nexport const MatrixMovie: FC = () => {\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                filter: 'blur(2px)'\r\n            }}>\r\n                <P5Component sketch={circle} />\r\n            </div>\r\n\r\n            {/* 青いスクリーン */}\r\n            <div style={{ \r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                background: 'linear-gradient(#00606b, #999, #fff, #000)',\r\n                mixBlendMode: 'soft-light',\r\n                width: '100vw',\r\n                height: '100vh',\r\n            }} />\r\n\r\n            {/* オレンジアウト */}\r\n            <div style={{ \r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                background: 'linear-gradient(rgba(0,0,0,0) 70%, #ffae00 100%)',\r\n                mixBlendMode: 'overlay',\r\n                width: '100vw',\r\n                height: '100vh',\r\n            }}/>\r\n            <div style={{\r\n                position: 'fixed',\r\n                width: '30vw',\r\n                bottom: 0,\r\n                right: 0,\r\n            }}\r\n            >\r\n                <h1 style={{\r\n                    color: \"#46cc80\",\r\n                    fontSize: '3vw',\r\n                    textAlign: 'center',\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    letterSpacing: '0.3em',\r\n                }}>\r\n                    マテリックス\r\n                </h1>\r\n                <p style={{\r\n                    color: \"#46cc80\",\r\n                    fontSize: '1vw',\r\n                    textAlign: 'center',\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    paddingBottom: '30px',\r\n                    letterSpacing: '0.3em',\r\n                }}>\r\n                    リゾレクションズ\r\n                </p>\r\n                <p style={{\r\n                    color: \"#fff\",\r\n                    fontSize: '1.3vw',\r\n                    textAlign: 'center',\r\n                    fontFamily: 'serif',\r\n                    margin: 0,\r\n                    padding: 0,\r\n                    paddingBottom: '50px',\r\n                }}>\r\n                    12.17\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nexport const range = (len: number) => (new Array(len)).fill(0).map((_, index) => index);\r\n/**\r\n * @param arr\r\n * @param length\r\n * @returns\r\n */\r\nexport const rough = <T>(arr: ArrayLike<T>, length: number) => {\r\n    const number: T[][] = [];\r\n    for (let i = 0; i < arr.length; i += length) {\r\n        number[number.length] = [];\r\n        for (let j = 0; j < length; j ++ ) {\r\n            if (arr[i + j] == null) continue;\r\n            number[number.length - 1].push(arr[i + j]);\r\n        }\r\n    }\r\n    return number;\r\n};","import bezier from '@takumus/cubic-bezier';\r\n\r\nexport const EaseOutQuad = bezier(0.25, 0.46, 0.45, 0.94);\r\nexport const EaseOutExpo = bezier(0.19, 1, 0.22, 1);\r\nexport const EaseInQuad = bezier(0.55, 0.085, 0.68, 0.53);\r\n","/**\r\n * ref https://note.kiriukun.com/entry/20181206-rgb-and-hsl-conversion\r\n * HSLからRGBを算出して返却\r\n * @param  {Number} h - 色相 (0~360)\r\n * @param  {Number} s - 彩度 (0~100)\r\n * @param  {Number} l - 明度 (0~100)\r\n * @return {Object} r: 赤 (0~255), g: 緑 (0~255), b: 青 (0~255)\r\n */\r\nexport const hsl2rgb = function (h: number, s: number, l: number) {\r\n    const RGB_MAX = 255;\r\n    const HUE_MAX = 360;\r\n    const SATURATION_MAX = 100;\r\n    const LIGHTNESS_MAX = 100;\r\n    let r, g, b, max, min;\r\n\r\n    h = h % HUE_MAX;\r\n    s = s / SATURATION_MAX;\r\n    l = l / LIGHTNESS_MAX;\r\n\r\n    if (l < 0.5) {\r\n        max = l + l * s;\r\n        min = l - l * s;\r\n    } else {\r\n        max = l + (1 - l) * s;\r\n        min = l - (1 - l) * s;\r\n    }\r\n\r\n    const hp = HUE_MAX / 6;\r\n    const q = h / hp;\r\n    if (q <= 1) {\r\n        r = max;\r\n        g = (h / hp) * (max - min) + min;\r\n        b = min;\r\n    } else if (q <= 2) {\r\n        r = ((hp * 2 - h) / hp) * (max - min) + min;\r\n        g = max;\r\n        b = min;\r\n    } else if (q <= 3) {\r\n        r = min;\r\n        g = max;\r\n        b = ((h - hp * 2) / hp) * (max - min) + min;\r\n    } else if (q <= 4) {\r\n        r = min;\r\n        g = ((hp * 4 - h) / hp) * (max - min) + min;\r\n        b = max;\r\n    } else if (q <= 5) {\r\n        r = ((h - hp * 4) / hp) * (max - min) + min;\r\n        g = min;\r\n        b = max;\r\n    } else {\r\n        r = max;\r\n        g = min;\r\n        b = ((HUE_MAX - h) / hp) * (max - min) + min;\r\n    }\r\n\r\n    return {\r\n        r: r * RGB_MAX,\r\n        g: g * RGB_MAX,\r\n        b: b * RGB_MAX\r\n    };\r\n};\r\n","import Simplex from 'simplex-noise';\r\n\r\ninterface NoiseOptions {\r\n    noiseDiff?: number;\r\n}\r\n\r\nexport const parseSimplecNoise = (instance: Simplex) => (args: number[]): number => {\r\n    if (args.length === 1) throw new Error('fuck you');\r\n    if (args.length === 2) return instance.noise2D(args[0], args[1]);\r\n    if (args.length === 3) return instance.noise3D(args[0], args[1], args[2]);\r\n    return instance.noise4D(args[0], args[1], args[2], args[3]);\r\n}\r\n\r\nexport const createCurlNoise = (noise: (vlaues: number[]) => number) => {\r\n    return (values: number[], options?: NoiseOptions) => {\r\n        const {\r\n            noiseDiff = 0.01,\r\n        } = options || {};\r\n\r\n        return values.map((_, index) => {\r\n            // 誤差A\r\n            const a = values.map((value, target) => {\r\n                if (target === index) {\r\n                    return [\r\n                        value - noiseDiff,\r\n                        value + noiseDiff,\r\n                    ];\r\n                }\r\n                return [\r\n                    value,\r\n                    value,\r\n                ];\r\n            });\r\n\r\n            const result = a.reduce((prev, current, index) => {\r\n                if (index === 0) return noise(current);\r\n                return prev - noise([...current].reverse())\r\n            }, 0);\r\n            return calcEps(result, noiseDiff);\r\n        }).map((val, index) => {\r\n            if (index % 2 === 0) return -val;\r\n            return val;\r\n        });\r\n    };\r\n}\r\n\r\nfunction calcEps(a: number, inv: number) {\r\n    return a * (1.0 / (2 * inv));\r\n}\r\n\r\n/**\r\n * @param t1 - 開始地点\r\n * @param t2 - 終了地点\r\n * @param a - 経過 (0-1)\r\n * @returns t1とt2のa線形補完\r\n */\r\nexport const mix = (t1: number, t2: number, a: number) => t1 * (1 - a) + t2 * a;\r\n\r\nexport const randomXorShift = (seed: number = 88675123) => {\r\n    let w = seed;\r\n    let x = 123456789;\r\n    let y = 362436069;\r\n    let z = 521288629;\r\n    return (min = 0, max = 1) => {\r\n        const t = x ^ (x << 11);\r\n        x = y;\r\n        y = z;\r\n        z = w;\r\n        w = (w ^ (w >>> 19)) ^ (t ^ (t >>> 8));\r\n\r\n        const r = Math.abs(w)\r\n        return min + (r % (max + 1 - min));\r\n    };\r\n};\r\n\r\n/**\r\n * 0-1に変換する\r\n * @param t 対象数値\r\n * @param min 最小数値\r\n * @param max 最大数値\r\n * @returns 0-1\r\n * @example\r\n * ```\r\n * normalize(2, 1, 3) // => 0.5\r\n * ```\r\n */\r\nexport const normalize = (t: number, min: number, max: number): number => (t - min) / (max - min);\r\n\r\n\r\n/**\r\n * @param x 導出元数値\r\n * @param min 最小値\r\n * @param max 最大値\r\n * @returns 最小値と最大値の間を返却する\r\n * @example (1.1, 0, 1) => 1\r\n * @example (-0.1, 0, 1) => 0\r\n * @example (1.1, 1, 0) => 1\r\n * @example (-0.1, 1, 0) => 0\r\n */\r\nexport const minMax = (x: number, range1: number, range2: number): number =>\r\n  Math.min(Math.max(range2, range1), Math.max(Math.min(range2, range1), x));\r\n\r\n/**\r\n * between\r\n * @param min 最小値\r\n * @param max 最大値\r\n * @param a ターゲットの値\r\n * @param offset 外部許可\r\n * @returns\r\n */\r\nexport const between = (min: number, max: number, a: number, offset: number = 0): boolean => a >= min - offset && a <= max + offset;\r\n\r\n// callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any\r\n\r\ntype MapFunction<T, U> = (value: T, index: number, array: T[]) => U;\r\n/**\r\n * map関数をIndexによる分割をし、順次実行する。（例　x y z ごとのポジションを変更する）\r\n */\r\nexport const editSplitArrayMap = <T, U>(...functions: MapFunction<T, U>[]) => (value: T, index: number, array: T[]) => {\r\n    return functions[index % functions.length](value, Math.floor(index / functions.length), array);\r\n};\r\n\r\n"],"names":["P5Component","sketch","refWrapper","useRef","useEffect","current","Error","instance","p5","remove","ref","matrixType","MatrixText","x","y","ctx","textLength","texts","range","map","size","onEdnded","intervalTokens","this","draw","bind","getText","initialize","renderText","windowHeight","yMove","window","setInterval","typohraphy","clearInterval","Math","floor","random","length","progress","textIndex","hsl2rgb","mix","EaseOutQuad","r","g","b","fill","text","blendMode","LIGHTEST","textSize","textStyle","BOLD","i","MULTIPLY","circle","p","textItem","windowWidth","resizeCanvas","background","setup","windowResized","forEach","MatrixMovie","style","filter","position","top","left","mixBlendMode","width","height","bottom","right","color","fontSize","textAlign","margin","padding","letterSpacing","paddingBottom","fontFamily","len","Array","_","index","rough","arr","number","j","push","bezier","h","s","l","max","min","hp","HUE_MAX","q","parseSimplecNoise","args","noise2D","noise3D","noise4D","createCurlNoise","noise","values","options","noiseDiff","a","inv","calcEps","value","target","reduce","prev","reverse","val","t1","t2","randomXorShift","seed","w","z","t","abs","minMax","range1","range2","editSplitArrayMap","functions","array"],"sourceRoot":""}